

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Thu May 11 15:52:00 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    15  0000                     
    16                           ; Version 1.41
    17                           ; Generated 25/01/2017 GMT
    18                           ; 
    19                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F452 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     
    51                           	psect	nvCOMRAM
    52  000020                     __pnvCOMRAM:
    53                           	opt stack 0
    54  000020                     _adc:
    55                           	opt stack 0
    56  000020                     	ds	2
    57  000022                     _duty:
    58                           	opt stack 0
    59  000022                     	ds	1
    60  0000                     _TMR0	set	4054
    61  0000                     _PORTCbits	set	3970
    62  0000                     _PORTC	set	3970
    63  0000                     _PORTA	set	3968
    64  0000                     _TRISC	set	3988
    65  0000                     _TRISA	set	3986
    66  0000                     _ADCON1	set	4033
    67  0000                     _ADCON0	set	4034
    68  0000                     _T0CON	set	4053
    69  0000                     _ADRESL	set	4035
    70  0000                     _ADRESH	set	4036
    71  0000                     _ADCON0bits	set	4034
    72  0000                     _TMR0IF	set	32658
    73  0000                     _TMR0ON	set	32431
    74  0000                     _TMR0IE	set	32661
    75  0000                     _PEIE	set	32662
    76  0000                     _GIE	set	32663
    77                           
    78                           ; #config settings
    79  0000                     
    80                           	psect	cinit
    81  00020A                     __pcinit:
    82                           	opt stack 0
    83  00020A                     start_initialization:
    84                           	opt stack 0
    85  00020A                     __initialization:
    86                           	opt stack 0
    87  00020A                     end_of_initialization:
    88                           	opt stack 0
    89  00020A                     __end_of__initialization:
    90                           	opt stack 0
    91  00020A  9023               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    92  00020C  9223               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    93  00020E  0100               	movlb	0
    94  000210  EFBE  F000         	goto	_main	;jump to C main() function
    95                           
    96                           	psect	cstackCOMRAM
    97  000001                     __pcstackCOMRAM:
    98                           	opt stack 0
    99  000001                     ??_interrupcao:
   100                           
   101                           ; 1 bytes @ 0x0
   102  000001                     	ds	19
   103  000014                     ?_ADC_Read:
   104                           	opt stack 0
   105                           
   106                           ; 2 bytes @ 0x13
   107  000014                     	ds	2
   108  000016                     ADC_Read@resultado:
   109                           	opt stack 0
   110                           
   111                           ; 2 bytes @ 0x15
   112  000016                     	ds	2
   113  000018                     ?___awdiv:
   114                           	opt stack 0
   115  000018                     ___awdiv@dividend:
   116                           	opt stack 0
   117                           
   118                           ; 2 bytes @ 0x17
   119  000018                     	ds	2
   120  00001A                     ___awdiv@divisor:
   121                           	opt stack 0
   122                           
   123                           ; 2 bytes @ 0x19
   124  00001A                     	ds	2
   125  00001C                     ___awdiv@counter:
   126                           	opt stack 0
   127                           
   128                           ; 1 bytes @ 0x1B
   129  00001C                     	ds	1
   130  00001D                     ___awdiv@sign:
   131                           	opt stack 0
   132                           
   133                           ; 1 bytes @ 0x1C
   134  00001D                     	ds	1
   135  00001E                     ___awdiv@quotient:
   136                           	opt stack 0
   137                           
   138                           ; 2 bytes @ 0x1D
   139  00001E                     	ds	2
   140  000020                     
   141                           ; 1 bytes @ 0x1F
   142 ;;
   143 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   144 ;;
   145 ;; *************** function _main *****************
   146 ;; Defined at:
   147 ;;		line 78 in file "newmain.c"
   148 ;; Parameters:    Size  Location     Type
   149 ;;		None
   150 ;; Auto vars:     Size  Location     Type
   151 ;;		None
   152 ;; Return value:  Size  Location     Type
   153 ;;                  1    wreg      void 
   154 ;; Registers used:
   155 ;;		wreg, status,2, status,0, cstack
   156 ;; Tracked objects:
   157 ;;		On entry : 0/0
   158 ;;		On exit  : 0/0
   159 ;;		Unchanged: 0/0
   160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   161 ;;      Params:         0       0       0       0       0       0       0
   162 ;;      Locals:         0       0       0       0       0       0       0
   163 ;;      Temps:          0       0       0       0       0       0       0
   164 ;;      Totals:         0       0       0       0       0       0       0
   165 ;;Total ram usage:        0 bytes
   166 ;; Hardware stack levels required when called:    2
   167 ;; This function calls:
   168 ;;		_ADC_Read
   169 ;;		___awdiv
   170 ;; This function is called by:
   171 ;;		Startup code after reset
   172 ;; This function uses a non-reentrant model
   173 ;;
   174                           
   175                           	psect	text0
   176  00017C                     __ptext0:
   177                           	opt stack 0
   178  00017C                     _main:
   179                           	opt stack 0
   180  00017C  FFFF               	dw	65535	; assembler added errata NOP
   181                           
   182                           ;newmain.c: 79: GIE = 0x01;
   183                           
   184                           ;incstack = 0
   185  00017E  8EF2               	bsf	intcon,7,c	;volatile
   186                           
   187                           ;newmain.c: 80: PEIE = 0x01;
   188  000180  8CF2               	bsf	intcon,6,c	;volatile
   189                           
   190                           ;newmain.c: 81: TMR0IE = 1;
   191  000182  8AF2               	bsf	intcon,5,c	;volatile
   192                           
   193                           ;newmain.c: 82: T0CON = 0xC7;
   194  000184  0EC7               	movlw	199
   195  000186  6ED5               	movwf	4053,c	;volatile
   196                           
   197                           ;newmain.c: 83: ADCON0 = 0x81;
   198  000188  0E81               	movlw	129
   199  00018A  6EC2               	movwf	4034,c	;volatile
   200                           
   201                           ;newmain.c: 84: ADCON1 = 0x8E;
   202  00018C  0E8E               	movlw	142
   203  00018E  6EC1               	movwf	4033,c	;volatile
   204                           
   205                           ;newmain.c: 85: TRISA = 0x00;
   206  000190  0E00               	movlw	0
   207  000192  6E92               	movwf	3986,c	;volatile
   208                           
   209                           ;newmain.c: 86: TRISC = 0x00;
   210  000194  0E00               	movlw	0
   211  000196  6E94               	movwf	3988,c	;volatile
   212                           
   213                           ;newmain.c: 87: PORTA = 0x00;
   214  000198  0E00               	movlw	0
   215  00019A  6E80               	movwf	3968,c	;volatile
   216                           
   217                           ;newmain.c: 88: PORTC = 0x01;
   218  00019C  0E01               	movlw	1
   219  00019E  6E82               	movwf	3970,c	;volatile
   220                           
   221                           ;newmain.c: 89: duty = 16;
   222  0001A0  0E10               	movlw	16
   223  0001A2  6E22               	movwf	_duty,c
   224                           
   225                           ;newmain.c: 90: TMR0ON = 1;
   226  0001A4  8ED5               	bsf	4053,7,c	;volatile
   227                           
   228                           ;newmain.c: 91: TMR0 = 255;
   229  0001A6  0E00               	movlw	0
   230  0001A8  6ED7               	movwf	4055,c	;volatile
   231  0001AA  68D6               	setf	4054,c	;volatile
   232  0001AC                     l792:
   233  0001AC  FFFF               	dw	65535	; assembler added errata NOP
   234                           
   235                           ;newmain.c: 94: adc = ADC_Read()/64;
   236  0001AE  ECEB  F000         	call	_ADC_Read	;wreg free
   237  0001B2  C014  F018         	movff	?_ADC_Read,___awdiv@dividend
   238  0001B6  C015  F019         	movff	?_ADC_Read+1,___awdiv@dividend+1
   239  0001BA  0E00               	movlw	0
   240  0001BC  6E1B               	movwf	___awdiv@divisor+1,c
   241  0001BE  0E40               	movlw	64
   242  0001C0  6E1A               	movwf	___awdiv@divisor,c
   243  0001C2  EC72  F000         	call	___awdiv	;wreg free
   244  0001C6  C018  F020         	movff	?___awdiv,_adc
   245  0001CA  C019  F021         	movff	?___awdiv+1,_adc+1
   246                           
   247                           ;newmain.c: 95: duty = adc + 16;
   248  0001CE  5020               	movf	_adc,w,c
   249  0001D0  0F10               	addlw	16
   250  0001D2  6E22               	movwf	_duty,c
   251  0001D4  D7EB               	goto	l792
   252  0001D6                     __end_of_main:
   253                           	opt stack 0
   254                           intcon	equ	0xFF2
   255                           
   256 ;; *************** function ___awdiv *****************
   257 ;; Defined at:
   258 ;;		line 8 in file "/opt/microchip/xc8/v1.41/sources/common/awdiv.c"
   259 ;; Parameters:    Size  Location     Type
   260 ;;  dividend        2   23[COMRAM] int 
   261 ;;  divisor         2   25[COMRAM] int 
   262 ;; Auto vars:     Size  Location     Type
   263 ;;  quotient        2   29[COMRAM] int 
   264 ;;  sign            1   28[COMRAM] unsigned char 
   265 ;;  counter         1   27[COMRAM] unsigned char 
   266 ;; Return value:  Size  Location     Type
   267 ;;                  2   23[COMRAM] int 
   268 ;; Registers used:
   269 ;;		wreg, status,2, status,0
   270 ;; Tracked objects:
   271 ;;		On entry : 0/0
   272 ;;		On exit  : 0/0
   273 ;;		Unchanged: 0/0
   274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   275 ;;      Params:         4       0       0       0       0       0       0
   276 ;;      Locals:         4       0       0       0       0       0       0
   277 ;;      Temps:          0       0       0       0       0       0       0
   278 ;;      Totals:         8       0       0       0       0       0       0
   279 ;;Total ram usage:        8 bytes
   280 ;; Hardware stack levels used:    1
   281 ;; Hardware stack levels required when called:    1
   282 ;; This function calls:
   283 ;;		Nothing
   284 ;; This function is called by:
   285 ;;		_main
   286 ;; This function uses a non-reentrant model
   287 ;;
   288                           
   289                           	psect	text1
   290  0000E4                     __ptext1:
   291                           	opt stack 0
   292  0000E4                     ___awdiv:
   293                           	opt stack 0
   294  0000E4  FFFF               	dw	65535	; assembler added errata NOP
   295                           
   296                           ;incstack = 0
   297  0000E6  0E00               	movlw	0
   298  0000E8  6E1D               	movwf	___awdiv@sign,c
   299  0000EA  AE1B               	btfss	___awdiv@divisor+1,7,c
   300  0000EC  D006               	goto	l750
   301  0000EE  6C1A               	negf	___awdiv@divisor,c
   302  0000F0  1E1B               	comf	___awdiv@divisor+1,f,c
   303  0000F2  B0D8               	btfsc	status,0,c
   304  0000F4  2A1B               	incf	___awdiv@divisor+1,f,c
   305  0000F6  0E01               	movlw	1
   306  0000F8  6E1D               	movwf	___awdiv@sign,c
   307  0000FA                     l750:
   308  0000FA  FFFF               	dw	65535	; assembler added errata NOP
   309  0000FC  AE19               	btfss	___awdiv@dividend+1,7,c
   310  0000FE  D006               	goto	l756
   311  000100  6C18               	negf	___awdiv@dividend,c
   312  000102  1E19               	comf	___awdiv@dividend+1,f,c
   313  000104  B0D8               	btfsc	status,0,c
   314  000106  2A19               	incf	___awdiv@dividend+1,f,c
   315  000108  0E01               	movlw	1
   316  00010A  1A1D               	xorwf	___awdiv@sign,f,c
   317  00010C                     l756:
   318  00010C  FFFF               	dw	65535	; assembler added errata NOP
   319  00010E  0E00               	movlw	0
   320  000110  6E1F               	movwf	___awdiv@quotient+1,c
   321  000112  0E00               	movlw	0
   322  000114  6E1E               	movwf	___awdiv@quotient,c
   323  000116  501A               	movf	___awdiv@divisor,w,c
   324  000118  101B               	iorwf	___awdiv@divisor+1,w,c
   325  00011A  B4D8               	btfsc	status,2,c
   326  00011C  D020               	goto	l778
   327  00011E  0E01               	movlw	1
   328  000120  6E1C               	movwf	___awdiv@counter,c
   329  000122  D005               	goto	l764
   330  000124                     l762:
   331  000124  FFFF               	dw	65535	; assembler added errata NOP
   332  000126  90D8               	bcf	status,0,c
   333  000128  361A               	rlcf	___awdiv@divisor,f,c
   334  00012A  361B               	rlcf	___awdiv@divisor+1,f,c
   335  00012C  2A1C               	incf	___awdiv@counter,f,c
   336  00012E                     l764:
   337  00012E  FFFF               	dw	65535	; assembler added errata NOP
   338  000130  AE1B               	btfss	___awdiv@divisor+1,7,c
   339  000132  D7F8               	goto	l762
   340  000134                     l766:
   341  000134  FFFF               	dw	65535	; assembler added errata NOP
   342  000136  90D8               	bcf	status,0,c
   343  000138  361E               	rlcf	___awdiv@quotient,f,c
   344  00013A  361F               	rlcf	___awdiv@quotient+1,f,c
   345  00013C  501A               	movf	___awdiv@divisor,w,c
   346  00013E  5C18               	subwf	___awdiv@dividend,w,c
   347  000140  501B               	movf	___awdiv@divisor+1,w,c
   348  000142  5819               	subwfb	___awdiv@dividend+1,w,c
   349  000144  A0D8               	btfss	status,0,c
   350  000146  D005               	goto	l774
   351  000148  501A               	movf	___awdiv@divisor,w,c
   352  00014A  5E18               	subwf	___awdiv@dividend,f,c
   353  00014C  501B               	movf	___awdiv@divisor+1,w,c
   354  00014E  5A19               	subwfb	___awdiv@dividend+1,f,c
   355  000150  801E               	bsf	___awdiv@quotient,0,c
   356  000152                     l774:
   357  000152  FFFF               	dw	65535	; assembler added errata NOP
   358  000154  90D8               	bcf	status,0,c
   359  000156  321B               	rrcf	___awdiv@divisor+1,f,c
   360  000158  321A               	rrcf	___awdiv@divisor,f,c
   361  00015A  2E1C               	decfsz	___awdiv@counter,f,c
   362  00015C  D7EB               	goto	l766
   363  00015E                     l778:
   364  00015E  FFFF               	dw	65535	; assembler added errata NOP
   365  000160  501D               	movf	___awdiv@sign,w,c
   366  000162  B4D8               	btfsc	status,2,c
   367  000164  D004               	goto	l782
   368  000166  6C1E               	negf	___awdiv@quotient,c
   369  000168  1E1F               	comf	___awdiv@quotient+1,f,c
   370  00016A  B0D8               	btfsc	status,0,c
   371  00016C  2A1F               	incf	___awdiv@quotient+1,f,c
   372  00016E                     l782:
   373  00016E  FFFF               	dw	65535	; assembler added errata NOP
   374  000170  C01E  F018         	movff	___awdiv@quotient,?___awdiv
   375  000174  C01F  F019         	movff	___awdiv@quotient+1,?___awdiv+1
   376  000178  0012               	return		;funcret
   377  00017A  FFFF               	dw	65535	; errata NOP
   378  00017C                     __end_of___awdiv:
   379                           	opt stack 0
   380                           intcon	equ	0xFF2
   381                           status	equ	0xFD8
   382                           
   383 ;; *************** function _ADC_Read *****************
   384 ;; Defined at:
   385 ;;		line 67 in file "newmain.c"
   386 ;; Parameters:    Size  Location     Type
   387 ;;		None
   388 ;; Auto vars:     Size  Location     Type
   389 ;;  resultado       2   21[COMRAM] int 
   390 ;; Return value:  Size  Location     Type
   391 ;;                  2   19[COMRAM] int 
   392 ;; Registers used:
   393 ;;		wreg, status,2, status,0
   394 ;; Tracked objects:
   395 ;;		On entry : 0/0
   396 ;;		On exit  : 0/0
   397 ;;		Unchanged: 0/0
   398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   399 ;;      Params:         2       0       0       0       0       0       0
   400 ;;      Locals:         2       0       0       0       0       0       0
   401 ;;      Temps:          0       0       0       0       0       0       0
   402 ;;      Totals:         4       0       0       0       0       0       0
   403 ;;Total ram usage:        4 bytes
   404 ;; Hardware stack levels used:    1
   405 ;; Hardware stack levels required when called:    1
   406 ;; This function calls:
   407 ;;		Nothing
   408 ;; This function is called by:
   409 ;;		_main
   410 ;; This function uses a non-reentrant model
   411 ;;
   412                           
   413                           	psect	text2
   414  0001D6                     __ptext2:
   415                           	opt stack 0
   416  0001D6                     _ADC_Read:
   417                           	opt stack 0
   418  0001D6  FFFF               	dw	65535	; assembler added errata NOP
   419                           
   420                           ;newmain.c: 68: int resultado = 0;
   421                           
   422                           ;incstack = 0
   423  0001D8  0E00               	movlw	0
   424  0001DA  6E17               	movwf	ADC_Read@resultado+1,c
   425  0001DC  0E00               	movlw	0
   426  0001DE  6E16               	movwf	ADC_Read@resultado,c
   427                           
   428                           ;newmain.c: 69: ADCON0bits.GO_DONE = 1;
   429  0001E0  84C2               	bsf	4034,2,c	;volatile
   430  0001E2                     l41:
   431  0001E2  FFFF               	dw	65535	; assembler added errata NOP
   432  0001E4  B4C2               	btfsc	4034,2,c	;volatile
   433  0001E6  D7FD               	goto	l41
   434                           
   435                           ;newmain.c: 71: resultado = ADRESH;
   436  0001E8  CFC4 F016          	movff	4036,ADC_Read@resultado	;volatile
   437  0001EC  6A17               	clrf	ADC_Read@resultado+1,c
   438                           
   439                           ;newmain.c: 72: resultado = resultado<<8;
   440  0001EE  5016               	movf	ADC_Read@resultado,w,c
   441  0001F0  6E17               	movwf	ADC_Read@resultado+1,c
   442  0001F2  6A16               	clrf	ADC_Read@resultado,c
   443                           
   444                           ;newmain.c: 73: resultado = resultado | ADRESL;
   445  0001F4  5016               	movf	ADC_Read@resultado,w,c
   446  0001F6  10C3               	iorwf	4035,w,c	;volatile
   447  0001F8  6E16               	movwf	ADC_Read@resultado,c
   448  0001FA  5017               	movf	ADC_Read@resultado+1,w,c
   449  0001FC  6E17               	movwf	ADC_Read@resultado+1,c
   450                           
   451                           ;newmain.c: 74: return resultado;
   452  0001FE  C016  F014         	movff	ADC_Read@resultado,?_ADC_Read
   453  000202  C017  F015         	movff	ADC_Read@resultado+1,?_ADC_Read+1
   454  000206  0012               	return		;funcret
   455  000208  FFFF               	dw	65535	; errata NOP
   456  00020A                     __end_of_ADC_Read:
   457                           	opt stack 0
   458                           intcon	equ	0xFF2
   459                           status	equ	0xFD8
   460                           
   461 ;; *************** function _interrupcao *****************
   462 ;; Defined at:
   463 ;;		line 100 in file "newmain.c"
   464 ;; Parameters:    Size  Location     Type
   465 ;;		None
   466 ;; Auto vars:     Size  Location     Type
   467 ;;		None
   468 ;; Return value:  Size  Location     Type
   469 ;;                  1    wreg      void 
   470 ;; Registers used:
   471 ;;		wreg, status,2, status,0
   472 ;; Tracked objects:
   473 ;;		On entry : 0/0
   474 ;;		On exit  : 0/0
   475 ;;		Unchanged: 0/0
   476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   477 ;;      Params:         0       0       0       0       0       0       0
   478 ;;      Locals:         0       0       0       0       0       0       0
   479 ;;      Temps:         19       0       0       0       0       0       0
   480 ;;      Totals:        19       0       0       0       0       0       0
   481 ;;Total ram usage:       19 bytes
   482 ;; Hardware stack levels used:    1
   483 ;; This function calls:
   484 ;;		Nothing
   485 ;; This function is called by:
   486 ;;		Interrupt level 1
   487 ;; This function uses a non-reentrant model
   488 ;;
   489                           
   490                           	psect	intcodelo
   491  000018                     __pintcodelo:
   492                           	opt stack 0
   493  000018                     _interrupcao:
   494                           	opt stack 0
   495  000018  FFFF               	dw	65535	; assembler added errata NOP
   496                           
   497                           ;incstack = 0
   498  00001A  8023               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
   499  00001C  CFD8 F003          	movff	status,??_interrupcao+2
   500  000020  CFE8 F004          	movff	wreg,??_interrupcao+3
   501  000024  CFE0 F005          	movff	bsr,??_interrupcao+4
   502  000028  CFFA F006          	movff	pclath,??_interrupcao+5
   503  00002C  CFFB F007          	movff	pclatu,??_interrupcao+6
   504  000030  CFE9 F008          	movff	fsr0l,??_interrupcao+7
   505  000034  CFEA F009          	movff	fsr0h,??_interrupcao+8
   506  000038  CFE1 F00A          	movff	fsr1l,??_interrupcao+9
   507  00003C  CFE2 F00B          	movff	fsr1h,??_interrupcao+10
   508  000040  CFD9 F00C          	movff	fsr2l,??_interrupcao+11
   509  000044  CFDA F00D          	movff	fsr2h,??_interrupcao+12
   510  000048  CFF3 F00E          	movff	prodl,??_interrupcao+13
   511  00004C  CFF4 F00F          	movff	prodh,??_interrupcao+14
   512  000050  CFF6 F010          	movff	tblptrl,??_interrupcao+15
   513  000054  CFF7 F011          	movff	tblptrh,??_interrupcao+16
   514  000058  CFF8 F012          	movff	tblptru,??_interrupcao+17
   515  00005C  CFF5 F013          	movff	tablat,??_interrupcao+18
   516                           
   517                           ;newmain.c: 101: if(TMR0IF){
   518  000060  A4F2               	btfss	intcon,2,c	;volatile
   519  000062  D017               	goto	i1l56
   520                           
   521                           ;newmain.c: 102: TMR0IF = 0x00;
   522  000064  94F2               	bcf	intcon,2,c	;volatile
   523                           
   524                           ;newmain.c: 103: if(PORTCbits.RC0){
   525  000066  A082               	btfss	3970,0,c	;volatile
   526  000068  D005               	goto	i1l726
   527                           
   528                           ;newmain.c: 104: TMR0 = duty;
   529  00006A  C022  FFD6         	movff	_duty,4054	;volatile
   530  00006E  6AD7               	clrf	4055,c	;volatile
   531                           
   532                           ;newmain.c: 105: PORTCbits.RC0 = 0x00;
   533  000070  9082               	bcf	3970,0,c	;volatile
   534                           
   535                           ;newmain.c: 106: }else{
   536  000072  D00F               	goto	i1l56
   537  000074                     i1l726:
   538  000074  FFFF               	dw	65535	; assembler added errata NOP
   539                           
   540                           ;newmain.c: 107: TMR0 = 255 - duty;
   541  000076  5022               	movf	_duty,w,c
   542  000078  6E01               	movwf	??_interrupcao& (0+255),c
   543  00007A  6A02               	clrf	(??_interrupcao+1)& (0+255),c
   544  00007C  1E01               	comf	??_interrupcao,f,c
   545  00007E  1E02               	comf	??_interrupcao+1,f,c
   546  000080  4A01               	infsnz	??_interrupcao,f,c
   547  000082  2A02               	incf	??_interrupcao+1,f,c
   548  000084  0EFF               	movlw	255
   549  000086  2401               	addwf	??_interrupcao,w,c
   550  000088  6ED6               	movwf	4054,c	;volatile
   551  00008A  0E00               	movlw	0
   552  00008C  2002               	addwfc	??_interrupcao+1,w,c
   553  00008E  6ED7               	movwf	4055,c	;volatile
   554                           
   555                           ;newmain.c: 108: PORTCbits.RC0 = 0x01;
   556  000090  8082               	bsf	3970,0,c	;volatile
   557  000092                     i1l56:
   558  000092  FFFF               	dw	65535	; assembler added errata NOP
   559  000094  C013  FFF5         	movff	??_interrupcao+18,tablat
   560  000098  C012  FFF8         	movff	??_interrupcao+17,tblptru
   561  00009C  C011  FFF7         	movff	??_interrupcao+16,tblptrh
   562  0000A0  C010  FFF6         	movff	??_interrupcao+15,tblptrl
   563  0000A4  C00F  FFF4         	movff	??_interrupcao+14,prodh
   564  0000A8  C00E  FFF3         	movff	??_interrupcao+13,prodl
   565  0000AC  C00D  FFDA         	movff	??_interrupcao+12,fsr2h
   566  0000B0  C00C  FFD9         	movff	??_interrupcao+11,fsr2l
   567  0000B4  C00B  FFE2         	movff	??_interrupcao+10,fsr1h
   568  0000B8  C00A  FFE1         	movff	??_interrupcao+9,fsr1l
   569  0000BC  C009  FFEA         	movff	??_interrupcao+8,fsr0h
   570  0000C0  C008  FFE9         	movff	??_interrupcao+7,fsr0l
   571  0000C4  C007  FFFB         	movff	??_interrupcao+6,pclatu
   572  0000C8  C006  FFFA         	movff	??_interrupcao+5,pclath
   573  0000CC  C005  FFE0         	movff	??_interrupcao+4,bsr
   574  0000D0  C004  FFE8         	movff	??_interrupcao+3,wreg
   575  0000D4  C003  FFD8         	movff	??_interrupcao+2,status
   576  0000D8  9023               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
   577  0000DA  0010               	retfie	
   578  0000DC  FFFF               	dw	65535	; errata NOP
   579  0000DE                     __end_of_interrupcao:
   580                           	opt stack 0
   581  0000DE  FFFF               	dw	65535	; assembler added errata NOP
   582                           pclatu	equ	0xFFB
   583                           pclath	equ	0xFFA
   584                           tblptru	equ	0xFF8
   585                           tblptrh	equ	0xFF7
   586                           tblptrl	equ	0xFF6
   587                           tablat	equ	0xFF5
   588                           prodh	equ	0xFF4
   589                           prodl	equ	0xFF3
   590                           intcon	equ	0xFF2
   591                           fsr0h	equ	0xFEA
   592                           fsr0l	equ	0xFE9
   593                           wreg	equ	0xFE8
   594                           fsr1h	equ	0xFE2
   595                           fsr1l	equ	0xFE1
   596                           bsr	equ	0xFE0
   597                           fsr2h	equ	0xFDA
   598                           fsr2l	equ	0xFD9
   599                           status	equ	0xFD8
   600                           pclatu	equ	0xFFB
   601                           pclath	equ	0xFFA
   602                           tblptru	equ	0xFF8
   603                           tblptrh	equ	0xFF7
   604                           tblptrl	equ	0xFF6
   605                           tablat	equ	0xFF5
   606                           prodh	equ	0xFF4
   607                           prodl	equ	0xFF3
   608                           intcon	equ	0xFF2
   609                           fsr0h	equ	0xFEA
   610                           fsr0l	equ	0xFE9
   611                           wreg	equ	0xFE8
   612                           fsr1h	equ	0xFE2
   613                           fsr1l	equ	0xFE1
   614                           bsr	equ	0xFE0
   615                           fsr2h	equ	0xFDA
   616                           fsr2l	equ	0xFD9
   617                           status	equ	0xFD8
   618                           
   619                           	psect	rparam
   620  0000                     pclatu	equ	0xFFB
   621                           pclath	equ	0xFFA
   622                           tblptru	equ	0xFF8
   623                           tblptrh	equ	0xFF7
   624                           tblptrl	equ	0xFF6
   625                           tablat	equ	0xFF5
   626                           prodh	equ	0xFF4
   627                           prodl	equ	0xFF3
   628                           intcon	equ	0xFF2
   629                           fsr0h	equ	0xFEA
   630                           fsr0l	equ	0xFE9
   631                           wreg	equ	0xFE8
   632                           fsr1h	equ	0xFE2
   633                           fsr1l	equ	0xFE1
   634                           bsr	equ	0xFE0
   635                           fsr2h	equ	0xFDA
   636                           fsr2l	equ	0xFD9
   637                           status	equ	0xFD8
   638                           
   639                           	psect	temp
   640  000023                     btemp:
   641                           	opt stack 0
   642  000023                     	ds	1
   643  0000                     int$flags	set	btemp
   644                           pclatu	equ	0xFFB
   645                           pclath	equ	0xFFA
   646                           tblptru	equ	0xFF8
   647                           tblptrh	equ	0xFF7
   648                           tblptrl	equ	0xFF6
   649                           tablat	equ	0xFF5
   650                           prodh	equ	0xFF4
   651                           prodl	equ	0xFF3
   652                           intcon	equ	0xFF2
   653                           fsr0h	equ	0xFEA
   654                           fsr0l	equ	0xFE9
   655                           wreg	equ	0xFE8
   656                           fsr1h	equ	0xFE2
   657                           fsr1l	equ	0xFE1
   658                           bsr	equ	0xFE0
   659                           fsr2h	equ	0xFDA
   660                           fsr2l	equ	0xFD9
   661                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     31      34
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___awdiv
    ___awdiv->_ADC_Read

Critical Paths under _interrupcao in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _interrupcao in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupcao in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupcao in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupcao in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interrupcao in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interrupcao in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     456
                           _ADC_Read
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     386
                                             23 COMRAM     8     4      4
                           _ADC_Read (ARG)
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             4     2      2      70
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _interrupcao                                         19    19      0       0
                                              0 COMRAM    19    19      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Read
   ___awdiv
     _ADC_Read (ARG)

 _interrupcao (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7E     1F      22       1       27.0%
STACK                0      0       0       2        0.0%
DATA                 0      0      22       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
ABS                  0      0      22      15        0.0%
BITBANK5           100      0       0      16        0.0%
BIGRAM             5FF      0       0      17        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Thu May 11 15:52:00 2017

                                                               l41 01E2  
                                                     ___awdiv@sign 001D  
                                                               bsr 000FE0  
                                                     __CFG_CP0$OFF 000000  
                                                     __CFG_CP1$OFF 000000  
                                                     __CFG_CP2$OFF 000000  
                                                     __CFG_CP3$OFF 000000  
                                                      __CFG_OSC$XT 000000  
                                                              l750 00FA  
                                                              l762 0124  
                                                              l764 012E  
                                                              l756 010C  
                                                              l782 016E  
                                                              l774 0152  
                                                              l766 0134  
                                                              l792 01AC  
                                                              l778 015E  
                                                              _GIE 007F97  
                                                     __CFG_CPB$OFF 000000  
                                                     __CFG_CPD$OFF 000000  
                                                     __CFG_BOR$OFF 000000  
                                                              _adc 0020  
                                                     __CFG_BORV$20 000000  
                                                              wreg 000FE8  
                                                     __CFG_LVP$OFF 000000  
                                                     __CFG_WDT$OFF 000000  
                                                             _PEIE 007F96  
                                                             i1l56 0092  
                                                             _TMR0 000FD6  
                                                     __CFG_STVR$ON 000000  
                                                             _main 017C  
                                                             _duty 0022  
                                                             fsr0h 000FEA  
                                                             fsr1h 000FE2  
                                                             fsr2h 000FDA  
                                                             fsr0l 000FE9  
                                                             fsr1l 000FE1  
                                                             fsr2l 000FD9  
                                                             btemp 0023  
                                                 __end_of_ADC_Read 020A  
                                                             prodh 000FF4  
                                                             prodl 000FF3  
                                                             start 00E0  
                                                     ___param_bank 000000  
                                                    __CFG_OSCS$OFF 000000  
                                                            ?_main 0001  
                                                  __end_of___awdiv 017C  
                                                            _T0CON 000FD5  
                                                  ___awdiv@divisor 001A  
                                                            i1l726 0074  
                                                  ___awdiv@counter 001C  
                                                            _PORTA 000F80  
                                                            _PORTC 000F82  
                                                            _TRISA 000F92  
                                                            _TRISC 000F94  
                                                    __CFG_PWRT$OFF 000000  
                                                    __CFG_WRT0$OFF 000000  
                                                    __CFG_WRT1$OFF 000000  
                                                    __CFG_WRT2$OFF 000000  
                                                    __CFG_WRT3$OFF 000000  
                                                   __CFG_EBTR0$OFF 000000  
                                                   __CFG_EBTR1$OFF 000000  
                                                   __CFG_EBTR2$OFF 000000  
                                                   __CFG_EBTR3$OFF 000000  
                                                    __CFG_WRTB$OFF 000000  
                                                    __CFG_WRTC$OFF 000000  
                                                    __CFG_WRTD$OFF 000000  
                                                   __CFG_EBTRB$OFF 000000  
                                                            pclath 000FFA  
                                                            tablat 000FF5  
                                                            status 000FD8  
                                                  __initialization 020A  
                                                     ?_interrupcao 0001  
                                                     __end_of_main 01D6  
                                                           ??_main 0020  
                                                    __activetblptr 000000  
                                                  __CFG_CCP2MUX$ON 000000  
                                                           _ADCON0 000FC2  
                                                           _ADCON1 000FC1  
                                                           _ADRESH 000FC4  
                                                           _ADRESL 000FC3  
                                                 ___awdiv@dividend 0018  
                                                           _TMR0IE 007F95  
                                                           _TMR0IF 007F92  
                                                   __CFG_WDTPS$128 000000  
                                                           _TMR0ON 007EAF  
                                                        ??___awdiv 001C  
                                                 ___awdiv@quotient 001E  
                                                        ?_ADC_Read 0014  
                                                           tblptrh 000FF7  
                                                           tblptrl 000FF6  
                                                           tblptru 000FF8  
                                                       __accesstop 0080  
                                          __end_of__initialization 020A  
                                                    ___rparam_used 000001  
                                                   __pcstackCOMRAM 0001  
                                                       ??_ADC_Read 0016  
                                                       __pnvCOMRAM 0020  
                                             __size_of_interrupcao 00C6  
                                                          __Hparam 0000  
                                                          __Lparam 0000  
                                                          ___awdiv 00E4  
                                                          __pcinit 020A  
                                                          __ramtop 0600  
                                                          __ptext0 017C  
                                                          __ptext1 00E4  
                                                          __ptext2 01D6  
                                             end_of_initialization 020A  
                                                        _PORTCbits 000F82  
                                                __size_of_ADC_Read 0034  
                                              start_initialization 020A  
                                                    ??_interrupcao 0001  
                                                         ?___awdiv 0018  
                                                      __pintcodelo 0018  
                                                         _ADC_Read 01D6  
                                              __end_of_interrupcao 00DE  
                                                       _ADCON0bits 000FC2  
                                                         __Hrparam 0000  
                                                         __Lrparam 0000  
                                                 __size_of___awdiv 0098  
                                                    __size_of_main 005A  
                                                      _interrupcao 0018  
                                                         int$flags 0023  
                                                         intlevel1 0214  
                                                ADC_Read@resultado 0016  
